//------------------------------------------------------------------------------
// <auto-generated>
//    This code was generated from a template.
//
//    Manual changes to this file may cause unexpected behavior in your application.
//    Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Data.Objects;
using System.Data.Objects.DataClasses;
using System.Data.EntityClient;
using System.ComponentModel;
using System.Xml.Serialization;
using System.Runtime.Serialization;

[assembly: EdmSchemaAttribute()]
#region EDM Relationship Metadata

[assembly: EdmRelationshipAttribute("parastr_thirrpModel", "FK_Questions_AnswerUserId", "Users", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(parastr_thirrpModel.Users), "Questions", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(parastr_thirrpModel.Questions), true)]
[assembly: EdmRelationshipAttribute("parastr_thirrpModel", "FK_Questions_AskUserId", "Users", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(parastr_thirrpModel.Users), "Questions", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(parastr_thirrpModel.Questions), true)]

#endregion

namespace parastr_thirrpModel
{
    #region Contexts
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    public partial class Entities : ObjectContext
    {
        #region Constructors
    
        /// <summary>
        /// Initializes a new Entities object using the connection string found in the 'Entities' section of the application configuration file.
        /// </summary>
        public Entities() : base("name=Entities", "Entities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        /// <summary>
        /// Initialize a new Entities object.
        /// </summary>
        public Entities(string connectionString) : base(connectionString, "Entities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        /// <summary>
        /// Initialize a new Entities object.
        /// </summary>
        public Entities(EntityConnection connection) : base(connection, "Entities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        #endregion
    
        #region Partial Methods
    
        partial void OnContextCreated();
    
        #endregion
    
        #region ObjectSet Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Questions> Questions
        {
            get
            {
                if ((_Questions == null))
                {
                    _Questions = base.CreateObjectSet<Questions>("Questions");
                }
                return _Questions;
            }
        }
        private ObjectSet<Questions> _Questions;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Users> Users
        {
            get
            {
                if ((_Users == null))
                {
                    _Users = base.CreateObjectSet<Users>("Users");
                }
                return _Users;
            }
        }
        private ObjectSet<Users> _Users;

        #endregion
        #region AddTo Methods
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Questions EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToQuestions(Questions questions)
        {
            base.AddObject("Questions", questions);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Users EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToUsers(Users users)
        {
            base.AddObject("Users", users);
        }

        #endregion
        #region Function Imports
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="intQuestionId">No Metadata Documentation available.</param>
        /// <param name="varAnswer">No Metadata Documentation available.</param>
        /// <param name="intUserId">No Metadata Documentation available.</param>
        public ObjectResult<Questions> AnswerQuestion(Nullable<global::System.Int32> intQuestionId, global::System.String varAnswer, Nullable<global::System.Int32> intUserId)
        {
            ObjectParameter intQuestionIdParameter;
            if (intQuestionId.HasValue)
            {
                intQuestionIdParameter = new ObjectParameter("intQuestionId", intQuestionId);
            }
            else
            {
                intQuestionIdParameter = new ObjectParameter("intQuestionId", typeof(global::System.Int32));
            }
    
            ObjectParameter varAnswerParameter;
            if (varAnswer != null)
            {
                varAnswerParameter = new ObjectParameter("varAnswer", varAnswer);
            }
            else
            {
                varAnswerParameter = new ObjectParameter("varAnswer", typeof(global::System.String));
            }
    
            ObjectParameter intUserIdParameter;
            if (intUserId.HasValue)
            {
                intUserIdParameter = new ObjectParameter("intUserId", intUserId);
            }
            else
            {
                intUserIdParameter = new ObjectParameter("intUserId", typeof(global::System.Int32));
            }
    
            return base.ExecuteFunction<Questions>("AnswerQuestion", intQuestionIdParameter, varAnswerParameter, intUserIdParameter);
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="mergeOption"></param>
        /// <param name="intQuestionId">No Metadata Documentation available.</param>
        /// <param name="varAnswer">No Metadata Documentation available.</param>
        /// <param name="intUserId">No Metadata Documentation available.</param>
        public ObjectResult<Questions> AnswerQuestion(Nullable<global::System.Int32> intQuestionId, global::System.String varAnswer, Nullable<global::System.Int32> intUserId, MergeOption mergeOption)
        {
            ObjectParameter intQuestionIdParameter;
            if (intQuestionId.HasValue)
            {
                intQuestionIdParameter = new ObjectParameter("intQuestionId", intQuestionId);
            }
            else
            {
                intQuestionIdParameter = new ObjectParameter("intQuestionId", typeof(global::System.Int32));
            }
    
            ObjectParameter varAnswerParameter;
            if (varAnswer != null)
            {
                varAnswerParameter = new ObjectParameter("varAnswer", varAnswer);
            }
            else
            {
                varAnswerParameter = new ObjectParameter("varAnswer", typeof(global::System.String));
            }
    
            ObjectParameter intUserIdParameter;
            if (intUserId.HasValue)
            {
                intUserIdParameter = new ObjectParameter("intUserId", intUserId);
            }
            else
            {
                intUserIdParameter = new ObjectParameter("intUserId", typeof(global::System.Int32));
            }
    
            return base.ExecuteFunction<Questions>("AnswerQuestion", mergeOption, intQuestionIdParameter, varAnswerParameter, intUserIdParameter);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="varLocale">No Metadata Documentation available.</param>
        /// <param name="intUserId">No Metadata Documentation available.</param>
        public ObjectResult<Questions> GetQuestionToAnswer(global::System.String varLocale, Nullable<global::System.Int32> intUserId)
        {
            ObjectParameter varLocaleParameter;
            if (varLocale != null)
            {
                varLocaleParameter = new ObjectParameter("varLocale", varLocale);
            }
            else
            {
                varLocaleParameter = new ObjectParameter("varLocale", typeof(global::System.String));
            }
    
            ObjectParameter intUserIdParameter;
            if (intUserId.HasValue)
            {
                intUserIdParameter = new ObjectParameter("intUserId", intUserId);
            }
            else
            {
                intUserIdParameter = new ObjectParameter("intUserId", typeof(global::System.Int32));
            }
    
            return base.ExecuteFunction<Questions>("GetQuestionToAnswer", varLocaleParameter, intUserIdParameter);
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="mergeOption"></param>
        /// <param name="varLocale">No Metadata Documentation available.</param>
        /// <param name="intUserId">No Metadata Documentation available.</param>
        public ObjectResult<Questions> GetQuestionToAnswer(global::System.String varLocale, Nullable<global::System.Int32> intUserId, MergeOption mergeOption)
        {
            ObjectParameter varLocaleParameter;
            if (varLocale != null)
            {
                varLocaleParameter = new ObjectParameter("varLocale", varLocale);
            }
            else
            {
                varLocaleParameter = new ObjectParameter("varLocale", typeof(global::System.String));
            }
    
            ObjectParameter intUserIdParameter;
            if (intUserId.HasValue)
            {
                intUserIdParameter = new ObjectParameter("intUserId", intUserId);
            }
            else
            {
                intUserIdParameter = new ObjectParameter("intUserId", typeof(global::System.Int32));
            }
    
            return base.ExecuteFunction<Questions>("GetQuestionToAnswer", mergeOption, varLocaleParameter, intUserIdParameter);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="cDeviceID">No Metadata Documentation available.</param>
        public ObjectResult<Users> GetUser(global::System.String cDeviceID)
        {
            ObjectParameter cDeviceIDParameter;
            if (cDeviceID != null)
            {
                cDeviceIDParameter = new ObjectParameter("cDeviceID", cDeviceID);
            }
            else
            {
                cDeviceIDParameter = new ObjectParameter("cDeviceID", typeof(global::System.String));
            }
    
            return base.ExecuteFunction<Users>("GetUser", cDeviceIDParameter);
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="mergeOption"></param>
        /// <param name="cDeviceID">No Metadata Documentation available.</param>
        public ObjectResult<Users> GetUser(global::System.String cDeviceID, MergeOption mergeOption)
        {
            ObjectParameter cDeviceIDParameter;
            if (cDeviceID != null)
            {
                cDeviceIDParameter = new ObjectParameter("cDeviceID", cDeviceID);
            }
            else
            {
                cDeviceIDParameter = new ObjectParameter("cDeviceID", typeof(global::System.String));
            }
    
            return base.ExecuteFunction<Users>("GetUser", mergeOption, cDeviceIDParameter);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="varLocale">No Metadata Documentation available.</param>
        /// <param name="varQuestion">No Metadata Documentation available.</param>
        /// <param name="intUserId">No Metadata Documentation available.</param>
        public ObjectResult<Questions> InsertQuestion(global::System.String varLocale, global::System.String varQuestion, Nullable<global::System.Int32> intUserId)
        {
            ObjectParameter varLocaleParameter;
            if (varLocale != null)
            {
                varLocaleParameter = new ObjectParameter("varLocale", varLocale);
            }
            else
            {
                varLocaleParameter = new ObjectParameter("varLocale", typeof(global::System.String));
            }
    
            ObjectParameter varQuestionParameter;
            if (varQuestion != null)
            {
                varQuestionParameter = new ObjectParameter("varQuestion", varQuestion);
            }
            else
            {
                varQuestionParameter = new ObjectParameter("varQuestion", typeof(global::System.String));
            }
    
            ObjectParameter intUserIdParameter;
            if (intUserId.HasValue)
            {
                intUserIdParameter = new ObjectParameter("intUserId", intUserId);
            }
            else
            {
                intUserIdParameter = new ObjectParameter("intUserId", typeof(global::System.Int32));
            }
    
            return base.ExecuteFunction<Questions>("InsertQuestion", varLocaleParameter, varQuestionParameter, intUserIdParameter);
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="mergeOption"></param>
        /// <param name="varLocale">No Metadata Documentation available.</param>
        /// <param name="varQuestion">No Metadata Documentation available.</param>
        /// <param name="intUserId">No Metadata Documentation available.</param>
        public ObjectResult<Questions> InsertQuestion(global::System.String varLocale, global::System.String varQuestion, Nullable<global::System.Int32> intUserId, MergeOption mergeOption)
        {
            ObjectParameter varLocaleParameter;
            if (varLocale != null)
            {
                varLocaleParameter = new ObjectParameter("varLocale", varLocale);
            }
            else
            {
                varLocaleParameter = new ObjectParameter("varLocale", typeof(global::System.String));
            }
    
            ObjectParameter varQuestionParameter;
            if (varQuestion != null)
            {
                varQuestionParameter = new ObjectParameter("varQuestion", varQuestion);
            }
            else
            {
                varQuestionParameter = new ObjectParameter("varQuestion", typeof(global::System.String));
            }
    
            ObjectParameter intUserIdParameter;
            if (intUserId.HasValue)
            {
                intUserIdParameter = new ObjectParameter("intUserId", intUserId);
            }
            else
            {
                intUserIdParameter = new ObjectParameter("intUserId", typeof(global::System.Int32));
            }
    
            return base.ExecuteFunction<Questions>("InsertQuestion", mergeOption, varLocaleParameter, varQuestionParameter, intUserIdParameter);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="intUserId">No Metadata Documentation available.</param>
        /// <param name="cDeviceToken">No Metadata Documentation available.</param>
        public int SavePushToken(Nullable<global::System.Int32> intUserId, global::System.String cDeviceToken)
        {
            ObjectParameter intUserIdParameter;
            if (intUserId.HasValue)
            {
                intUserIdParameter = new ObjectParameter("intUserId", intUserId);
            }
            else
            {
                intUserIdParameter = new ObjectParameter("intUserId", typeof(global::System.Int32));
            }
    
            ObjectParameter cDeviceTokenParameter;
            if (cDeviceToken != null)
            {
                cDeviceTokenParameter = new ObjectParameter("cDeviceToken", cDeviceToken);
            }
            else
            {
                cDeviceTokenParameter = new ObjectParameter("cDeviceToken", typeof(global::System.String));
            }
    
            return base.ExecuteFunction("SavePushToken", intUserIdParameter, cDeviceTokenParameter);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="intUserId">No Metadata Documentation available.</param>
        public ObjectResult<Questions> GetQuestionsByUserId(Nullable<global::System.Int32> intUserId)
        {
            ObjectParameter intUserIdParameter;
            if (intUserId.HasValue)
            {
                intUserIdParameter = new ObjectParameter("intUserId", intUserId);
            }
            else
            {
                intUserIdParameter = new ObjectParameter("intUserId", typeof(global::System.Int32));
            }
    
            return base.ExecuteFunction<Questions>("GetQuestionsByUserId", intUserIdParameter);
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="mergeOption"></param>
        /// <param name="intUserId">No Metadata Documentation available.</param>
        public ObjectResult<Questions> GetQuestionsByUserId(Nullable<global::System.Int32> intUserId, MergeOption mergeOption)
        {
            ObjectParameter intUserIdParameter;
            if (intUserId.HasValue)
            {
                intUserIdParameter = new ObjectParameter("intUserId", intUserId);
            }
            else
            {
                intUserIdParameter = new ObjectParameter("intUserId", typeof(global::System.Int32));
            }
    
            return base.ExecuteFunction<Questions>("GetQuestionsByUserId", mergeOption, intUserIdParameter);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="intQuestionId">No Metadata Documentation available.</param>
        public int ArchiveQuestion(Nullable<global::System.Int32> intQuestionId)
        {
            ObjectParameter intQuestionIdParameter;
            if (intQuestionId.HasValue)
            {
                intQuestionIdParameter = new ObjectParameter("intQuestionId", intQuestionId);
            }
            else
            {
                intQuestionIdParameter = new ObjectParameter("intQuestionId", typeof(global::System.Int32));
            }
    
            return base.ExecuteFunction("ArchiveQuestion", intQuestionIdParameter);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="intUserId">No Metadata Documentation available.</param>
        public ObjectResult<Nullable<global::System.Int32>> GetBadgeCount(Nullable<global::System.Int32> intUserId)
        {
            ObjectParameter intUserIdParameter;
            if (intUserId.HasValue)
            {
                intUserIdParameter = new ObjectParameter("intUserId", intUserId);
            }
            else
            {
                intUserIdParameter = new ObjectParameter("intUserId", typeof(global::System.Int32));
            }
    
            return base.ExecuteFunction<Nullable<global::System.Int32>>("GetBadgeCount", intUserIdParameter);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="intUserId">No Metadata Documentation available.</param>
        /// <param name="intBadgeCount">No Metadata Documentation available.</param>
        public int SetBadgeCount(Nullable<global::System.Int32> intUserId, Nullable<global::System.Int32> intBadgeCount)
        {
            ObjectParameter intUserIdParameter;
            if (intUserId.HasValue)
            {
                intUserIdParameter = new ObjectParameter("intUserId", intUserId);
            }
            else
            {
                intUserIdParameter = new ObjectParameter("intUserId", typeof(global::System.Int32));
            }
    
            ObjectParameter intBadgeCountParameter;
            if (intBadgeCount.HasValue)
            {
                intBadgeCountParameter = new ObjectParameter("intBadgeCount", intBadgeCount);
            }
            else
            {
                intBadgeCountParameter = new ObjectParameter("intBadgeCount", typeof(global::System.Int32));
            }
    
            return base.ExecuteFunction("SetBadgeCount", intUserIdParameter, intBadgeCountParameter);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="intUserId">No Metadata Documentation available.</param>
        public ObjectResult<global::System.String> GetPushToken(Nullable<global::System.Int32> intUserId)
        {
            ObjectParameter intUserIdParameter;
            if (intUserId.HasValue)
            {
                intUserIdParameter = new ObjectParameter("intUserId", intUserId);
            }
            else
            {
                intUserIdParameter = new ObjectParameter("intUserId", typeof(global::System.Int32));
            }
    
            return base.ExecuteFunction<global::System.String>("GetPushToken", intUserIdParameter);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="intQuestionId">No Metadata Documentation available.</param>
        public ObjectResult<Questions> GetQuestion(Nullable<global::System.Int32> intQuestionId)
        {
            ObjectParameter intQuestionIdParameter;
            if (intQuestionId.HasValue)
            {
                intQuestionIdParameter = new ObjectParameter("intQuestionId", intQuestionId);
            }
            else
            {
                intQuestionIdParameter = new ObjectParameter("intQuestionId", typeof(global::System.Int32));
            }
    
            return base.ExecuteFunction<Questions>("GetQuestion", intQuestionIdParameter);
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="mergeOption"></param>
        /// <param name="intQuestionId">No Metadata Documentation available.</param>
        public ObjectResult<Questions> GetQuestion(Nullable<global::System.Int32> intQuestionId, MergeOption mergeOption)
        {
            ObjectParameter intQuestionIdParameter;
            if (intQuestionId.HasValue)
            {
                intQuestionIdParameter = new ObjectParameter("intQuestionId", intQuestionId);
            }
            else
            {
                intQuestionIdParameter = new ObjectParameter("intQuestionId", typeof(global::System.Int32));
            }
    
            return base.ExecuteFunction<Questions>("GetQuestion", mergeOption, intQuestionIdParameter);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="intQuestionId">No Metadata Documentation available.</param>
        public int DidViewAnswer(Nullable<global::System.Int32> intQuestionId)
        {
            ObjectParameter intQuestionIdParameter;
            if (intQuestionId.HasValue)
            {
                intQuestionIdParameter = new ObjectParameter("intQuestionId", intQuestionId);
            }
            else
            {
                intQuestionIdParameter = new ObjectParameter("intQuestionId", typeof(global::System.Int32));
            }
    
            return base.ExecuteFunction("DidViewAnswer", intQuestionIdParameter);
        }

        #endregion
    }
    

    #endregion
    
    #region Entities
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="parastr_thirrpModel", Name="Questions")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Questions : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Questions object.
        /// </summary>
        /// <param name="questionId">Initial value of the QuestionId property.</param>
        public static Questions CreateQuestions(global::System.Int32 questionId)
        {
            Questions questions = new Questions();
            questions.QuestionId = questionId;
            return questions;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 QuestionId
        {
            get
            {
                return _QuestionId;
            }
            set
            {
                if (_QuestionId != value)
                {
                    OnQuestionIdChanging(value);
                    ReportPropertyChanging("QuestionId");
                    _QuestionId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("QuestionId");
                    OnQuestionIdChanged();
                }
            }
        }
        private global::System.Int32 _QuestionId;
        partial void OnQuestionIdChanging(global::System.Int32 value);
        partial void OnQuestionIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Locale
        {
            get
            {
                return _Locale;
            }
            set
            {
                OnLocaleChanging(value);
                ReportPropertyChanging("Locale");
                _Locale = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Locale");
                OnLocaleChanged();
            }
        }
        private global::System.String _Locale;
        partial void OnLocaleChanging(global::System.String value);
        partial void OnLocaleChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Question
        {
            get
            {
                return _Question;
            }
            set
            {
                OnQuestionChanging(value);
                ReportPropertyChanging("Question");
                _Question = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Question");
                OnQuestionChanged();
            }
        }
        private global::System.String _Question;
        partial void OnQuestionChanging(global::System.String value);
        partial void OnQuestionChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Answer
        {
            get
            {
                return _Answer;
            }
            set
            {
                OnAnswerChanging(value);
                ReportPropertyChanging("Answer");
                _Answer = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Answer");
                OnAnswerChanged();
            }
        }
        private global::System.String _Answer;
        partial void OnAnswerChanging(global::System.String value);
        partial void OnAnswerChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> AskUserId
        {
            get
            {
                return _AskUserId;
            }
            set
            {
                OnAskUserIdChanging(value);
                ReportPropertyChanging("AskUserId");
                _AskUserId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("AskUserId");
                OnAskUserIdChanged();
            }
        }
        private Nullable<global::System.Int32> _AskUserId;
        partial void OnAskUserIdChanging(Nullable<global::System.Int32> value);
        partial void OnAskUserIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> AskDateTime
        {
            get
            {
                return _AskDateTime;
            }
            set
            {
                OnAskDateTimeChanging(value);
                ReportPropertyChanging("AskDateTime");
                _AskDateTime = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("AskDateTime");
                OnAskDateTimeChanged();
            }
        }
        private Nullable<global::System.DateTime> _AskDateTime;
        partial void OnAskDateTimeChanging(Nullable<global::System.DateTime> value);
        partial void OnAskDateTimeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> AnswerUserId
        {
            get
            {
                return _AnswerUserId;
            }
            set
            {
                OnAnswerUserIdChanging(value);
                ReportPropertyChanging("AnswerUserId");
                _AnswerUserId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("AnswerUserId");
                OnAnswerUserIdChanged();
            }
        }
        private Nullable<global::System.Int32> _AnswerUserId;
        partial void OnAnswerUserIdChanging(Nullable<global::System.Int32> value);
        partial void OnAnswerUserIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> AnswerDateTime
        {
            get
            {
                return _AnswerDateTime;
            }
            set
            {
                OnAnswerDateTimeChanging(value);
                ReportPropertyChanging("AnswerDateTime");
                _AnswerDateTime = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("AnswerDateTime");
                OnAnswerDateTimeChanged();
            }
        }
        private Nullable<global::System.DateTime> _AnswerDateTime;
        partial void OnAnswerDateTimeChanging(Nullable<global::System.DateTime> value);
        partial void OnAnswerDateTimeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Boolean> Archived
        {
            get
            {
                return _Archived;
            }
            set
            {
                OnArchivedChanging(value);
                ReportPropertyChanging("Archived");
                _Archived = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Archived");
                OnArchivedChanged();
            }
        }
        private Nullable<global::System.Boolean> _Archived;
        partial void OnArchivedChanging(Nullable<global::System.Boolean> value);
        partial void OnArchivedChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Boolean> ViewedAnswer
        {
            get
            {
                return _ViewedAnswer;
            }
            set
            {
                OnViewedAnswerChanging(value);
                ReportPropertyChanging("ViewedAnswer");
                _ViewedAnswer = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ViewedAnswer");
                OnViewedAnswerChanged();
            }
        }
        private Nullable<global::System.Boolean> _ViewedAnswer;
        partial void OnViewedAnswerChanging(Nullable<global::System.Boolean> value);
        partial void OnViewedAnswerChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("parastr_thirrpModel", "FK_Questions_AnswerUserId", "Users")]
        public Users Users
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Users>("parastr_thirrpModel.FK_Questions_AnswerUserId", "Users").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Users>("parastr_thirrpModel.FK_Questions_AnswerUserId", "Users").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Users> UsersReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Users>("parastr_thirrpModel.FK_Questions_AnswerUserId", "Users");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Users>("parastr_thirrpModel.FK_Questions_AnswerUserId", "Users", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("parastr_thirrpModel", "FK_Questions_AskUserId", "Users")]
        public Users Users1
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Users>("parastr_thirrpModel.FK_Questions_AskUserId", "Users").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Users>("parastr_thirrpModel.FK_Questions_AskUserId", "Users").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Users> Users1Reference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Users>("parastr_thirrpModel.FK_Questions_AskUserId", "Users");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Users>("parastr_thirrpModel.FK_Questions_AskUserId", "Users", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="parastr_thirrpModel", Name="Users")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Users : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Users object.
        /// </summary>
        /// <param name="userId">Initial value of the UserId property.</param>
        /// <param name="deviceID">Initial value of the DeviceID property.</param>
        public static Users CreateUsers(global::System.Int32 userId, global::System.String deviceID)
        {
            Users users = new Users();
            users.UserId = userId;
            users.DeviceID = deviceID;
            return users;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 UserId
        {
            get
            {
                return _UserId;
            }
            set
            {
                if (_UserId != value)
                {
                    OnUserIdChanging(value);
                    ReportPropertyChanging("UserId");
                    _UserId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("UserId");
                    OnUserIdChanged();
                }
            }
        }
        private global::System.Int32 _UserId;
        partial void OnUserIdChanging(global::System.Int32 value);
        partial void OnUserIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String DeviceID
        {
            get
            {
                return _DeviceID;
            }
            set
            {
                OnDeviceIDChanging(value);
                ReportPropertyChanging("DeviceID");
                _DeviceID = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("DeviceID");
                OnDeviceIDChanged();
            }
        }
        private global::System.String _DeviceID;
        partial void OnDeviceIDChanging(global::System.String value);
        partial void OnDeviceIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String DeviceToken
        {
            get
            {
                return _DeviceToken;
            }
            set
            {
                OnDeviceTokenChanging(value);
                ReportPropertyChanging("DeviceToken");
                _DeviceToken = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("DeviceToken");
                OnDeviceTokenChanged();
            }
        }
        private global::System.String _DeviceToken;
        partial void OnDeviceTokenChanging(global::System.String value);
        partial void OnDeviceTokenChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> BadgeCount
        {
            get
            {
                return _BadgeCount;
            }
            set
            {
                OnBadgeCountChanging(value);
                ReportPropertyChanging("BadgeCount");
                _BadgeCount = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("BadgeCount");
                OnBadgeCountChanged();
            }
        }
        private Nullable<global::System.Int32> _BadgeCount;
        partial void OnBadgeCountChanging(Nullable<global::System.Int32> value);
        partial void OnBadgeCountChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("parastr_thirrpModel", "FK_Questions_AnswerUserId", "Questions")]
        public EntityCollection<Questions> Questions
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Questions>("parastr_thirrpModel.FK_Questions_AnswerUserId", "Questions");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Questions>("parastr_thirrpModel.FK_Questions_AnswerUserId", "Questions", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("parastr_thirrpModel", "FK_Questions_AskUserId", "Questions")]
        public EntityCollection<Questions> Questions1
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Questions>("parastr_thirrpModel.FK_Questions_AskUserId", "Questions");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Questions>("parastr_thirrpModel.FK_Questions_AskUserId", "Questions", value);
                }
            }
        }

        #endregion
    }

    #endregion
    
}
